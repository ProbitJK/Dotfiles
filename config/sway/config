# Read `man 5 sway` for a complete reference.
# Catppuccin theme
set {
    $teal #94E25D
    $black #11111B
    $red #F28FAD
    $peach #F8BD96
    $transparent #00000000
    $base #1E1E2E
    $surface0 #313244
    $surface1 #45475A
    $overlay0 #6C7086
    $text #CDD6F4
    $lavender #B4BEFE
}
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

#set $menu dmenu_run -nb "#1E1E2E" -nf "#CDD6F4" -sb "#6C7086" -sf "#94E25D" -fn "mononoki Nerd Font-14" -p "   " -b -l 6 | xargs -r swaymsg exec --

# Set sway font
font pango: mononoki Nerd Font 12

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# select filename of image at random from the wallpapers folder
set $PIC $(find ~/Pictures/wallpapers/ -type f | shuf -n 1)
# set the selected image as wallpaper. in order to change wallpaper simply press alt+shift+r
#output * bg $PIC fill
output eDP-1 {
    bg $PIC fill
}
output HDMI-A-1 {
    bg $PIC fill
    pos 1920 0
    res 3840x2160
    scale 1.35
    scale_filter linear
}

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
 exec swayidle -w \
          timeout 900 'swaylock -f -s fill -i ~/Pictures/wallpapers/linux-stripes-1920×1080.jpg' \
          timeout 1200 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -s fill -i ~/Pictures/wallpapers/linux-stripes-1920×1080.jpg'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input "1267:228:Elan_Touchpad" {
    click_method clickfinger
    drag enabled
    dwt enabled
    tap enabled
    tap_button_map lrm
    natural_scroll disabled
    scroll_method two_finger
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Clamshell mode
#
set $lock swaylock
set $sleep $lock && systemctl suspend
set $notify notify-send
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop exec '[ $(swaymsg -t get_outputs | grep name | wc -l) == 1 ] && (&sleep) || ($notify "Clamshell mode" "Laptop screen off" && swaymsg output $laptop disable)'
bindswitch --reload --locked lid:off output $laptop enable
# To ensure that reloading sway does not enable laptop screen if using Clamshell mode
exec_always ~/.config/sway/scripts/clamshell.sh
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym Mod1+q kill
    #bindsym $mod+Shift+c kill
    #bindsym Mod1+F4 kill

    # dmenu to be used as a menu, to be used for fallback situations only
    #bindsym $mod+d exec $menu
    # Using fzf as a menu system and it fucking works!!!
    bindsym $mod+d exec "alacritty --class fzf-menu -t fzf-menu -e ~/.config/sway/scripts/fzf-menu.sh"

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # take a screenshot using 'Printscreen' button
    #bindsym --release Print exec --no-startup-id "grim ~/Pictures/Screenshots/Screenshot-$(date +%Y%m%d-%H:%M:%S).png && notify-send -t 2000 'Screenshot captured successfully'"
    #bindsym --release Shift+Print exec --no-startup-id grim -g "$(slurp)" ~/Pictures/Screenshots/Screenshot-$(date +%Y%m%d-%H:%M:%S).png && notify-send -t 2000 'Screenshot captured successfully'
    # take a screenshot using win+s/win+S button
    bindsym --release $mod+s exec --no-startup-id "grim ~/Pictures/Screenshots/Screenshot-$(date +%Y%m%d-%H:%M:%S).png && notify-send -t 2000 'Screenshot captured successfully'"
    bindsym --release $mod+Shift+s exec --no-startup-id grim -g "$(slurp)" ~/Pictures/Screenshots/Screenshot-$(date +%Y%m%d-%H:%M:%S).png && notify-send -t 2000 'Screenshot captured successfully'

    # Lockscreen using swaylock
    bindsym Mod1+l exec "swaylock -s fill -i ~/Pictures/wallpapers/linux-stripes-1920×1080.jpg"

    # Launch ranger as file-manager
    bindsym $mod+e exec "alacritty -e ranger"

    # Launch qutebrowser using Super+b
    bindsym $mod+b exec "qutebrowser"

    # Launch firefox with Super+Shift+b
    bindsym $mod+Shift+b exec "firefox"

    # Adjust screen brightness using light
    bindsym Mod1+F12 exec light -A 5
    bindsym Mod1+F11 exec light -U 5

    # Adjust screen temperature using gammastep
    bindsym Mod1+Shift+F12 exec gammastep -O 6500
    bindsym Mod1+Shift+F11 exec gammastep -O 4500

    # Control volume
    # Mute/Unmute speakers using alt+F1
    bindsym Mod1+F1 exec "~/.config/sway/scripts/volume.sh --toggle"
    # Increase volume by 5% using alt+F3
    bindsym Mod1+F3 exec "~/.config/sway/scripts/volume.sh --up"
    # Decrease volume by 5% using alt+F2
    bindsym Mod1+F2 exec "~/.config/sway/scripts/volume.sh --down"

    # toggle control center for Notification using swaync
    bindsym $mod+n exec swaync-client -t -sw

    # Floating windows
    for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="Preferences"] floating enable
    for_window [window_role="task_dialog|bubble|page-info|Preferences|pop-up"] floating enable
    for_window [window_role="Open Files"] floating enable sticky
    for_window [window_role="File Operation Progress"] floating enable sticky
    for_window [window_role="Save As"] floating enable
    for_window [window_type="dialog"] floating enable
    for_window [window_type="menu"] floating enable
    for_window [app_id="fzf-menu"] floating enable

    # Reload the configuration file
    bindsym Mod1+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+x exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

### Configuring how the wm looks
default_border pixel 1
default_floating_border pixel 1
title_align center
for_window [class=".*"] border pixel 2
gaps inner 7
gaps outer -2
gaps top 1
gaps bottom 1
# Changing the opacity of an application
bindsym Mod1+F10 opacity minus 0.02
bindsym Mod1+Shift+F10 opacity plus 0.02
# Defining colors           border      bg          text        indicator   child_border
client.focused        	 	$teal       $teal       $black      $red        $teal
client.unfocused        	$peach      $peach      $black      $red        $transparent
client.focused_inactive 	$peach      $peach      $black      $red        $transparent
client.urgent	            $red        $red        $black      $red        $red
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym Mod1+h splith
    bindsym Mod1+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+Shift+s layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Run notification daemon swaync at startup
exec swaync
# Start dropbox at startup
exec_always dropboxd
# Start bitwarden at startup
exec_always bitwarden
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
